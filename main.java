// Создаем класс ГорячийНапиток
public class ГорячийНапиток {
    private String имя;
    private int объем;

    // Конструктор класса
    public ГорячийНапиток(String имя, int объем) {
        this.имя = имя;
        this.объем = объем;
    }

    // Геттеры и сеттеры
    public String getИмя() {
        return имя;
    }

    public int getОбъем() {
        return объем;
    }
}

// Создаем наследника класса ГорячийНапиток с дополнительным полем температура
public class ГорячийНапитокСТемпературой extends ГорячийНапиток {
    private int температура;

    // Конструктор класса
    public ГорячийНапитокСТемпературой(String имя, int объем, int температура) {
        super(имя, объем);
        this.температура = температура;
    }

    // Геттер для температуры
    public int getТемпература() {
        return температура;
    }
}

// Создаем интерфейс ТорговыйАвтомат
public interface ТорговыйАвтомат {
    ГорячийНапиток getProduct(String имя, int объем);
    ГорячийНапитокСТемпературой getProduct(String имя, int объем, int температура);
}

// Реализуем класс ГорячихНапитковАвтомат, который реализует интерфейс ТорговыйАвтомат
public class ГорячихНапитковАвтомат implements ТорговыйАвтомат {
    // Здесь можно создать коллекцию (например, список) для хранения доступных напитков

    @Override
    public ГорячийНапиток getProduct(String имя, int объем) {
        // Реализация логики получения напитка по имени и объему (без учета температуры)
        // ...
        // Возвращаем полученный напиток
        return new ГорячийНапиток(имя, объем);
    }

    @Override
    public ГорячийНапитокСТемпературой getProduct(String имя, int объем, int температура) {
        // Реализация логики получения напитка по имени, объему и температуре
        // ...
        // Возвращаем полученный напиток с температурой
        return new ГорячийНапитокСТемпературой(имя, объем, температура);
    }
}

// В main методе проинициализируем объекты и проведем тестирование логики
public class Main {
    public static void main(String[] args) {
        ГорячихНапитковАвтомат автомат = new ГорячихНапитковАвтомат();

        ГорячийНапиток чай = автомат.getProduct("Чай", 200);
        ГорячийНапитокСТемпературой кофе = автомат.getProduct("Кофе", 300, 85);

        System.out.println("Выдан чай: " + чай.getИмя() + ", объем: " + чай.getОбъем());
        System.out.println("Выдан кофе: " + кофе.getИмя() + ", объем: " + кофе.getОбъем() + ", температура: " + кофе.getТемпература());
    }
}
